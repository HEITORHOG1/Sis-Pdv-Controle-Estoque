version: '3.8'

services:
  pdv-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pdv-api
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_SERVER=mysql
      - DB_NAME=PDV_PROD
      - DB_USER=pdvuser
      - DB_PASSWORD=${DB_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=pdvuser
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - PDV_ENCRYPTION_KEY=${PDV_ENCRYPTION_KEY}
    volumes:
      - pdv-logs:/app/logs
      - pdv-backups:/app/backups
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pdv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    container_name: pdv-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=PDV_PROD
      - MYSQL_USER=pdvuser
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - pdv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: pdv-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=pdvuser
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - pdv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: pdv-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - pdv-api
    networks:
      - pdv-network
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local
  rabbitmq-data:
    driver: local
  pdv-logs:
    driver: local
  pdv-backups:
    driver: local

networks:
  pdv-network:
    driver: bridge